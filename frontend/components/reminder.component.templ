package frontend

import "pkg/types"

templ ReminderAndAlertPage(tasks []types.Task) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<link rel="stylesheet" href="/assets/styles/index.css"/>
			<link rel="stylesheet" href="/assets/styles/reminder.css"/>
			<script src="assets/javascript/script.out.js"></script>
			<script src="assets/libraries/htmx.min.js"></script>
			<title>ScreenTimePage</title>
		</head>
		<body>
			<div class="page">
				@menu()
				@reminderAndAlert(tasks)
			</div>
		</body>
	</html>
}

templ reminderAndAlert(tasks []types.Task) {
	<div class="main">
		@Header()
		<div class="reminder-page">
			<div class="sticky-header">
				<h2>Reminder and Alert</h2>
				<button
					hx-get="/addEvent"
					hx-trigger="click"
					data-bs-toggle="modal"
					data-bs-target="#addEvent"
					class="btn btn-modal"
				>
					<img src="assets/svg/add.svg" alt=""/>
				</button>
			</div>
			@reminderList(tasks)
		</div>
	</div>
	<dialog class="form">
		<form class="new-reminder" method="dialog">
			<div class="titles">
				<div class="form-pair">
					<label for="add-title">Title:</label>
					<input
						type="text"
						id="add-title"
						name="title"
						required
						minlength="4"
						maxlength="35"
						placeholder="minimun of 4 words"
					/>
				</div>
				<div class="form-pair">
					<label for="add-subtitle">Subtitle:</label>
					<input
						type="text"
						id="add-subtitle"
						name="subtitle"
						maxlength="50"
						placeholder="optional"
					/>
				</div>
			</div>
			<div class="reminder-time">
				<div class="combine">
					<div class="form-pair">
						<label for="set-reminder">Set your reminder:</label>
						<input
							type="datetime-local"
							id="set-reminder"
							name="reminder"
							value="2024-06-03T00:00"
							min="2024-06-03T00:00"
							max="2024-06-07T00:00"
						/>
					</div>
					<div class="alert">
						<input
							type="checkbox"
							value="true"
							id="sound-notification-reminder"
							name="soundNotificationReminder"
							checked
						/>
						<label for="sound-notification-reminder">
							<img
								src="assets/svg/bell.svg"
								alt="Notification Icon"
							/>
						</label>
					</div>
				</div>
				<div class="combine">
					<div class="form-pair ">
						<label for="add-notification__first">
							First
							notification
							(Mins):
						</label>
						<input
							type="number"
							id="add-notification__first"
							name="firstNotification"
							min="0"
							max="10"
							value="10"
						/>
					</div>
					<div class="alert">
						<input
							type="checkbox"
							value="true"
							id="sound-notification-first"
							name="soundNotificationFirst"
							checked
						/>
						<label for="sound-notification-first">
							<img
								src="assets/svg/bell.svg"
								alt="Notification Icon"
							/>
						</label>
					</div>
				</div>
				<div class="combine">
					<div class="form-pair">
						<label for="add-notification__second">
							Second
							notification
							(Mins):
						</label>
						<input
							type="number"
							id="add-notification__second"
							name="secondNotification"
							min="0"
							max="10"
							value="5"
						/>
					</div>
					<div class="alert">
						<input
							type="checkbox"
							value="true"
							id="sound-notification-second"
							name="soundNotificationSecond"
							checked
						/>
						<label for="sound-notification-second">
							<img
								src="assets/svg/bell.svg"
								alt="Notification Icon"
							/>
						</label>
					</div>
				</div>
				<div class="out">
					<div class="form-pair">
						<label for="site-search">
							App to be
							launched:
						</label>
						<input
							type="search"
							id="site-search"
							name="q"
							list="food-list"
						/>
						<datalist id="food-list">
							<option value="Pizza"></option>
							<option value="Burger"></option>
							<option value="Sushi"></option>
							<option value="Pasta"></option>
							<option value="Salad"></option>
						</datalist>
					</div>
				</div>
			</div>
			<div class="form-pair">
				<label for="add-note">Include Note:</label>
				<textarea
					id="add-note"
					name="note"
					rows="3"
					cols="1"
					placeholder="optional"
				></textarea>
			</div>
			<div class="button-container">
				<button type="submit" formmethod="dialog">Create Reminder</button>
				<button class="close-modal" formnovalidate>Close</button>
			</div>
		</form>
	</dialog>
	<script>
    const dialog = document.querySelector('dialog');
    const showModalbutton = document.querySelector('button');
    const closeModalButton = document.querySelector("close-modal");
    showModalbutton.addEventListener('click', () => {
        dialog.showModal();
    });
    closeModalButton.addEventListener("click", ()=> {
        dialog.close();
    });
</script>
}

templ reminderList(task []types.Task) {
	<ul>
		for _, t := range task {
			<li>
				<div class="card">
					<div class="info">
						<p class="title"><span class="label"><i>title:</i></span> <span class="content">{ t.UI.Title }</span></p>
						<p class="subtitle"><span class="label"><i>subtitle:</i></span> <span class="content">{ t.UI.Subtitle }</span></p>
						<details>
							<summary><span class="label"><i>See attached note</i></span></summary>
							<p>{ t.UI.Notes }</p>
						</details>
						<div class="action">would launch: <img src={ getImageFilePath(t.AppInfo.AppName, t.AppInfo.Icon) } alt=""/> { t.AppInfo.AppName }</div>
					</div>
					<div class="spacing">
						<button class="edit-button">Edit</button>
					</div>
					<div class="alert">
						<p class="start"><span class="label"><i>Starts:</i></span> <span class="content">{ formatTimeToHumanReadable(t.TaskTime.StartTime) }</span></p>
						<p class="remind">
							<span class="label"><i>reminder:</i></span>
							<span class="content">{ formatTimeToHumanReadable(t.TaskTime.StartTime.Add(intToDuration(-t.TaskTime.AlertTimesInMinutes[0]))) }</span>
						</p>
						<p class="remind">
							<span class="label"><i>reminder:</i></span>
							<span class="content">{ formatTimeToHumanReadable(t.TaskTime.StartTime.Add(intToDuration(-t.TaskTime.AlertTimesInMinutes[1]))) }</span>
						</p>
					</div>
				</div>
			</li>
		}
	</ul>
}
